# Generated by Django 5.0.4 on 2025-03-10 18:16

from datetime import timedelta

from django.db import migrations, models
from django.db.models import F

from main_app.choices import StatusChoices


def update_delivery_and_warranty(apps, schema_editor):
    OrderModel = apps.get_model("main_app", "Order")
    CancelledOrderModel = apps.get_model("main_app", "CancelledOrder")

    pending_orders = OrderModel.objects.filter(status=StatusChoices.PENDING)
    pending_orders.update(delivery=F('order_date') + timedelta(days=3))

    completed_orders = OrderModel.objects.filter(status=StatusChoices.COMPLETED)
    completed_orders.update(warranty='24 months')

    cancelled_orders = OrderModel.objects.filter(status=StatusChoices.CANCELLED)

    CancelledOrderModel.objects.bulk_create(
        CancelledOrderModel(
            id=order.pk,
            product_name=order.product_name,
            customer_name=order.customer_name,
            order_date=order.order_date,
            amount=order.amount,
            product_price=order.product_price,
            total_price=order.total_price,
            warranty=order.warranty,
            delivery=order.delivery
        )
        for order in list(cancelled_orders)
    )

    cancelled_orders.delete()


def reverse_update_delivery_and_warranty(apps, schema_editor):
    OrderModel = apps.get_model("main_app", "Order")
    CancelledOrderModel = apps.get_model("main_app", "CancelledOrder")

    pending_orders = OrderModel.objects.filter(status=StatusChoices.PENDING)
    pending_orders.update(delivery=None)

    default_warranty = OrderModel._meta.get_field('warranty').default
    completed_orders = OrderModel.objects.filter(status=StatusChoices.COMPLETED)
    completed_orders.update(warranty=default_warranty)

    cancelled_orders = CancelledOrderModel.objects.all()

    OrderModel.objects.bulk_create(
        OrderModel(
            id=order.pk,
            product_name=order.product_name,
            customer_name=order.customer_name,
            order_date=order.order_date,
            status=order.status,
            amount=order.amount,
            product_price=order.product_price,
            total_price=order.total_price,
            warranty=order.warranty,
            delivery=order.delivery
        )
        for order in list(cancelled_orders)
    )

    cancelled_orders.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('main_app', '0015_order'),
    ]

    operations = [
        migrations.CreateModel(
            name='CancelledOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=30)),
                ('customer_name', models.CharField(max_length=100)),
                ('order_date', models.DateField()),
                ('status', models.CharField(default=StatusChoices.CANCELLED, max_length=30)),
                ('amount', models.PositiveIntegerField(default=1)),
                ('product_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('warranty', models.CharField(default='No warranty', max_length=100)),
                ('delivery', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.RunPython(
            update_delivery_and_warranty,
            reverse_code=reverse_update_delivery_and_warranty,
        )
    ]
